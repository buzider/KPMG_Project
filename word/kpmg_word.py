# -*- coding: utf-8 -*-
"""KPMG_Word.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AIu4PDFFvw7YNY-d_jEhwBhXvuM6w-Xq
"""

import sys
import jieba
import string
import pandas as pd
from IPython.display import display
import chardet
from google.colab import files

from google.colab import drive
drive.mount('/content/drive')

def Cutting(text):
  #mix the number without comma
  punct=string.punctuation
  text=text.replace(',','')
  text=text.replace(' ','')
  #load the dictionary
  jieba.load_userdict('drive/MyDrive/Financial_statements/dict.txt')

  #cutting
  Cut_Result=jieba.lcut(text)

  return Cut_Result

def Check_Index(Cut,Tar):
  Tar_Index=[]
  Index=0
  #Last=Cut.rindex(Tar)
  #while Index!=Last:
  #print(Cut)

  '''while(1):
    try:
      Index=Cut.index(Tar,Index+1)
      Tar_Index.append(Index)
    except ValueError:
      break
  '''
  for i in range(len(Cut)):
    if Tar in Cut[i]:
      Tar_Index.append(i)
  
  return Tar_Index

def Check_Num(target,numlist,truenum):
  #target is the name of event and numlist is the list include all the number near the target
  correctness="False"
  for num in numlist:
    sumnum=0
    for true_num in truenum:
      if true_num=="Null":
        continue
      else:
        sumnum+=int(true_num)
        if int(num)==int(true_num):
          correctness="True"
        elif int(num)==-int(true_num):
          correctness="True"
        elif int(num)==sumnum:
          correctness="SumTrue"
  return correctness

def GetNumStr(numlist):
  numstring=""
  #delete the duplicated number
  #numlist=[]
  #for num in dnumlist:
  #  if num not in numlist:
  #    numlist.append(num)
  #convert
  numlist=list(set(numlist))
  for i in range(len(numlist)):
    numstring+=numlist[i]
    if (i==len(numlist)-1):
      return numstring
    else:
      numstring+="/"

def Get_Num(Cut,Index,Target,Truenum,GetNULL=True):
  result=[]
  for i in Index:
    Indexint=int(i)
    event=[]
    event.append(Target)
    numlist=[]
    num=[]
    for j in range(Indexint,Indexint+15):
      if(all(elem.isdigit()for elem in Cut[j])):
        num.append(str(Cut[j]))
    #append the number list, Remark, and the check result
    #for number in numlist:
    #  if number not in numlist:
    #    num.append(number)
    if(len(num)==0):
      if GetNULL:
        #event.append("NULL")
        event.append("NULL")
        event.append("沒有數字項在項目附近")
        event.append("無須勾稽")
      else:
        continue
    elif(len(num)==1):
    #if numlist isn't empty check the correctness of the number within the database
      #event.append(num)
      event.append(GetNumStr(num))
      event.append("-")
      event.append(Check_Num(Target,num,Truenum))
    else:
      #event.append(num)
      event.append(GetNumStr(num))
      event.append("附近多於一個數")
      event.append(Check_Num(Target,num,Truenum))

    #check the correctness of the number within the database

    '''if (len(num)>1):
      event.append("多於一個數")
    elif (len(num)==1):
      event.append("-")
    else :
      event.append("沒有數字項在項目附近")'''
    result.append(event)
  return result

def connect_db(company_id_input,year_input,season_input):
    df = pd.read_csv(f"drive/MyDrive/Financial_statements/{company_id_input}/Balance_Sheet/{company_id_input}_{year_input}_{season_input}.csv")
    df2 = pd.read_csv(f"drive/MyDrive/Financial_statements/{company_id_input}/Cash_Flow_Statement/{company_id_input}_{year_input}_{season_input}.csv")
    df3 = pd.read_csv(f"drive/MyDrive/Financial_statements/{company_id_input}/Profit_and_Loss_Account/{company_id_input}_{year_input}_{season_input}.csv")
    df4 = pd.read_csv(f"drive/MyDrive/Financial_statements/{company_id_input}/Statement_of_changes_in_equity/{company_id_input}_{year_input}_{season_input}.csv")
    df_ls = [df,df2,df3,df4]
    return df_ls

def GetNumFromDB(company_id_input,year_input,season_input,input_ls):
    store_ls = []
    negative_ls = ["營業費用合計","財務成本淨額","所得稅費用（利益）合計","不重分類至損益之項目","與不重分類之項目相關之所得稅"]
    df_ls = connect_db(company_id_input,year_input,season_input)
    for search in input_ls:
        temp_ls = []
        for each_df in df_ls:
            try:
                filt = (each_df["會計項目Accounting Title"].str.contains(search))
                filt_result = each_df.loc[filt]
                if filt_result.empty:
                    continue
                else:
                    for i in range(len(filt_result)):
                        temp_num = filt_result.iloc[i,[3]][0]
                        if pd.isna(temp_num):
                            continue
                        else:
                            if "(" in str(temp_num):
                                temp_num = temp_num.replace("(","")
                                temp_num = temp_num.replace(")","")
                                temp_num = temp_num.replace(",","")
                                temp_num = str(-(int(temp_num)))
                            elif search in negative_ls:
                                temp_num =  str(-(int(temp_num)))
                            temp_ls.append(temp_num)
            except:
                pass
        if temp_ls == []:
            store_ls.append(["Null"])
        else:
            store_ls.append(temp_ls)
    return store_ls

def NullSign(GetNULL=True):
  if GetNULL:
    return ""
  else :
    return "noN"

#輸入代號、年份、季度
company_id_input=2707
year_input=2020
season_input=4

#得到會計師檢核內容
#word_true="f"
path=f"drive/MyDrive/Financial_statements/{company_id_input}/Auditor's_Report/{company_id_input}_{year_input}_{season_input}{word_true}.txt"
#path=f'drive/MyDrive/Financial_statements/Additional_Report{word_true}.txt'

f = open(path,'rb')
r = f.read()#獲取文本的編碼方式
f_charInfo = chardet.detect(r)
print(f_charInfo) #輸出文本格式信息
print(f_charInfo['encoding']) #取得文本格式
text=r.decode(f_charInfo['encoding'])
print(r.decode(f_charInfo['encoding'])) #通過取得的文本格式讀取txt
f.close()
text=text.replace(" ","")

#文字進行斷詞
Cut_Result=Cutting(text)
print(Cut_Result)

#輸入檢核項目
Target=["其他非流動資產","使用權資產","現金流量","租賃負債","資產總額","營業收入","現金及約當現金","現金股利"]


truenumlist=GetNumFromDB(company_id_input,year_input,season_input,Target)
print(truenumlist)


result_table=[]
GetNULL=False #if it is no need to reveal the event without number, then set GetNULL to False
for i in range(len(Target)):
  tar=Target[i]
  truenum=truenumlist[i]
  Tar_Index=Check_Index(Cut_Result,tar)
  near_num=Get_Num(Cut_Result,Tar_Index,tar,truenum,GetNULL)
  for i in near_num:
    result_table.append(i)
df=pd.DataFrame(result_table,columns=["項目","數字","備註","勾稽結果"])
print(" ")
#df=pd.DataFrame(result_table)
display(df)

null_sign=NullSign(GetNULL)

wordcheck_result_path=f"drive/MyDrive/Financial_statements/Word_Check_Result/{company_id_input}/{company_id_input}_{year_input}_{season_input}{word_true}{null_sign}.csv"
df.to_csv(wordcheck_result_path)